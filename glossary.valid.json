{
    "source_id": "glossary",
    "url": "https://developers.google.com/machine-learning/glossary",
    "sections": [
        {
            "name": "A/B testing",
            "split": "valid",
            "text": [
                [
                    "A/B testing",
                    "A/B 测试"
                ],
                [
                    "A statistical way of comparing two (or more) techniques, typically an incumbent against a new rival.",
                    "一种统计方法，用于将两种或多种技术进行比较，通常是将当前采用的技术与新技术进行比较。"
                ],
                [
                    "A/B testing aims to determine not only which technique performs better but also to understand whether the difference is statistically significant.",
                    "A/B 测试不仅旨在确定哪种技术的效果更好，而且还有助于了解相应差异是否具有显著的统计意义。"
                ],
                [
                    "A/B testing usually considers only two techniques using one measurement, but it can be applied to any finite number of techniques and measures.",
                    "A/B 测试通常是采用一种衡量方式对两种技术进行比较，但也适用于任意有限数量的技术和衡量方式。"
                ]
            ]
        },
        {
            "name": "batch size",
            "split": "valid",
            "text": [
                [
                    "batch size",
                    "批次大小"
                ],
                [
                    "The number of examples in a batch.",
                    "一个批次中的样本数。"
                ],
                [
                    "For example, the batch size of SGD is 1, while the batch size of a mini-batch is usually between 10 and 1000.",
                    "例如，SGD 的批次大小为 1，而小批次的大小通常介于 10 到 1000 之间。"
                ],
                [
                    "Batch size is usually fixed during training and inference; however, TensorFlow does permit dynamic batch sizes.",
                    "批次大小在训练和推断期间通常是固定的；不过，TensorFlow 允许使用动态批次大小。"
                ]
            ]
        },
        {
            "name": "binning",
            "split": "valid",
            "text": [
                [
                    "binning",
                    "分箱"
                ],
                [
                    "See bucketing.",
                    "请参阅分桶。"
                ]
            ]
        },
        {
            "name": "candidate sampling",
            "split": "valid",
            "text": [
                [
                    "candidate sampling",
                    "候选采样"
                ],
                [
                    "A training-time optimization in which a probability is calculated for all the positive labels, using, for example, softmax, but only for a random sample of negative labels.",
                    "一种训练时进行的优化，会使用某种函数（例如 softmax）针对所有正类别标签计算概率，但对于负类别标签，则仅针对其随机样本计算概率。"
                ],
                [
                    "For example, if we have an example labeled beagle and dog candidate sampling computes the predicted probabilities and corresponding loss terms for the beagle and dog class outputs in addition to a random subset of the remaining classes (cat, lollipop, fence).",
                    "例如，如果某个样本的标签为“小猎犬”和“狗”，则候选采样将针对“小猎犬”和“狗”类别输出以及其他类别（猫、棒棒糖、栅栏）的随机子集计算预测概率和相应的损失项。"
                ],
                [
                    "The idea is that the negative classes can learn from less frequent negative reinforcement as long as positive classes always get proper positive reinforcement, and this is indeed observed empirically.",
                    "这种采样基于的想法是，只要正类别始终得到适当的正增强，负类别就可以从频率较低的负增强中进行学习，这确实是在实际中观察到的情况。"
                ],
                [
                    "The motivation for candidate sampling is a computational efficiency win from not computing predictions for all negatives.",
                    "候选采样的目的是，通过不针对所有负类别计算预测结果来提高计算效率。"
                ]
            ]
        },
        {
            "name": "convergence",
            "split": "valid",
            "text": []
        },
        {
            "name": "critic",
            "split": "valid",
            "text": []
        },
        {
            "name": "data analysis",
            "split": "valid",
            "text": []
        },
        {
            "name": "DataFrame",
            "split": "valid",
            "text": []
        },
        {
            "name": "decision threshold",
            "split": "valid",
            "text": []
        },
        {
            "name": "dense feature",
            "split": "valid",
            "text": []
        },
        {
            "name": "dimensions",
            "split": "valid",
            "text": []
        },
        {
            "name": "disparate impact",
            "split": "valid",
            "text": []
        },
        {
            "name": "disparate treatment",
            "split": "valid",
            "text": []
        },
        {
            "name": "downsampling",
            "split": "valid",
            "text": []
        },
        {
            "name": "epsilon greedy policy",
            "split": "valid",
            "text": []
        },
        {
            "name": "equalized odds",
            "split": "valid",
            "text": []
        },
        {
            "name": "fairness metric",
            "split": "valid",
            "text": []
        },
        {
            "name": "false negative (FN)",
            "split": "valid",
            "text": []
        },
        {
            "name": "feature cross",
            "split": "valid",
            "text": []
        },
        {
            "name": "graph",
            "split": "valid",
            "text": []
        },
        {
            "name": "i.i.d.",
            "split": "valid",
            "text": []
        },
        {
            "name": "inter-rater agreement",
            "split": "valid",
            "text": []
        },
        {
            "name": "IoU",
            "split": "valid",
            "text": []
        },
        {
            "name": "Keras",
            "split": "valid",
            "text": []
        },
        {
            "name": "keypoints",
            "split": "valid",
            "text": []
        },
        {
            "name": "Kernel Support Vector Machines (KSVMs)",
            "split": "valid",
            "text": []
        },
        {
            "name": "labeled example",
            "split": "valid",
            "text": []
        },
        {
            "name": "layer",
            "split": "valid",
            "text": []
        },
        {
            "name": "Layers API (tf.layers)",
            "split": "valid",
            "text": []
        },
        {
            "name": "loss",
            "split": "valid",
            "text": []
        },
        {
            "name": "minority class",
            "split": "valid",
            "text": []
        },
        {
            "name": "noise",
            "split": "valid",
            "text": []
        },
        {
            "name": "P",
            "split": "valid",
            "text": []
        },
        {
            "name": "perceptron",
            "split": "valid",
            "text": []
        },
        {
            "name": "performance",
            "split": "valid",
            "text": []
        },
        {
            "name": "policy",
            "split": "valid",
            "text": []
        },
        {
            "name": "pooling",
            "split": "valid",
            "text": []
        },
        {
            "name": "quantile",
            "split": "valid",
            "text": []
        },
        {
            "name": "rank (Tensor)",
            "split": "valid",
            "text": []
        },
        {
            "name": "Rectified Linear Unit (ReLU)",
            "split": "valid",
            "text": []
        },
        {
            "name": "replay buffer",
            "split": "valid",
            "text": []
        },
        {
            "name": "scalar",
            "split": "valid",
            "text": []
        },
        {
            "name": "state",
            "split": "valid",
            "text": []
        },
        {
            "name": "subsampling",
            "split": "valid",
            "text": []
        },
        {
            "name": "target",
            "split": "valid",
            "text": []
        },
        {
            "name": "TPU chip",
            "split": "valid",
            "text": []
        },
        {
            "name": "TPU type",
            "split": "valid",
            "text": []
        },
        {
            "name": "transfer learning",
            "split": "valid",
            "text": []
        },
        {
            "name": "vanishing gradient problem",
            "split": "valid",
            "text": []
        }
    ]
}
